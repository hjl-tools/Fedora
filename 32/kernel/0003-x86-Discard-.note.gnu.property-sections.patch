From 5277193800a26343ad2c5f69f8590b00f564e2a2 Mon Sep 17 00:00:00 2001
From: "H.J. Lu" <hjl.tools@gmail.com>
Date: Thu, 19 Mar 2020 07:57:05 -0700
Subject: [PATCH 3/4] x86: Discard .note.gnu.property sections

---
 ...-.note.gnu.property-sections-in-vDSO.patch | 69 ++++++++++++++++
 ...IME_DISCARD_EXIT-to-generic-DISCARDS.patch | 54 +++++++++++++
 ...u.property-sections-in-generic-NOTES.patch | 81 +++++++++++++++++++
 kernel.spec                                   |  3 +
 4 files changed, 207 insertions(+)
 create mode 100644 0001-x86-Discard-.note.gnu.property-sections-in-vDSO.patch
 create mode 100644 0002-Add-RUNTIME_DISCARD_EXIT-to-generic-DISCARDS.patch
 create mode 100644 0003-Discard-.note.gnu.property-sections-in-generic-NOTES.patch

diff --git a/0001-x86-Discard-.note.gnu.property-sections-in-vDSO.patch b/0001-x86-Discard-.note.gnu.property-sections-in-vDSO.patch
new file mode 100644
index 000000000..8e4591f35
--- /dev/null
+++ b/0001-x86-Discard-.note.gnu.property-sections-in-vDSO.patch
@@ -0,0 +1,69 @@
+From f8d3c710c6e3261a421cbfe0e6c6a083515c2539 Mon Sep 17 00:00:00 2001
+From: "H.J. Lu" <hjl.tools@gmail.com>
+Date: Fri, 24 Jan 2020 09:37:03 -0800
+Subject: [PATCH 1/3] x86: Discard .note.gnu.property sections in vDSO
+
+With the command-line option, -mx86-used-note=yes, the x86 assembler
+in binutils 2.32 and above generates a program property note in a note
+section, .note.gnu.property, to encode used x86 ISAs and features.  But
+x86 kernel vDSO linker script only contains a single NOTE segment:
+
+PHDRS
+{
+ text PT_LOAD FLAGS(5) FILEHDR PHDRS; /* PF_R|PF_X */
+ dynamic PT_DYNAMIC FLAGS(4); /* PF_R */
+ note PT_NOTE FLAGS(4); /* PF_R */
+ eh_frame_hdr 0x6474e550;
+}
+
+The NOTE segment generated by vDSO linker script is aligned to 4 bytes.
+But .note.gnu.property section must be aligned to 8 bytes on x86-64 and
+we get
+
+[hjl@gnu-skx-1 vdso]$ readelf -n vdso64.so
+
+Displaying notes found in: .note
+  Owner                Data size 	Description
+  Linux                0x00000004	Unknown note type: (0x00000000)
+   description data: 06 00 00 00
+readelf: Warning: note with invalid namesz and/or descsz found at offset 0x20
+readelf: Warning:  type: 0x78, namesize: 0x00000100, descsize: 0x756e694c, alignment: 8
+[hjl@gnu-skx-1 vdso]$
+
+Since note.gnu.property section in vDSO is not checked by dynamic linker,
+this patch discards .note.gnu.property sections in vDSO by adding
+
+/DISCARD/ : {
+ *(.note.gnu.property)
+}
+
+before .notes sections in vDSO linker script.
+
+Signed-off-by: H.J. Lu <hjl.tools@gmail.com>
+Signed-off-by: Yu-cheng Yu <yu-cheng.yu@intel.com>
+Reviewed-by: Kees Cook <keescook@chromium.org>
+---
+ arch/x86/entry/vdso/vdso-layout.lds.S | 7 +++++++
+ 1 file changed, 7 insertions(+)
+
+diff --git a/arch/x86/entry/vdso/vdso-layout.lds.S b/arch/x86/entry/vdso/vdso-layout.lds.S
+index 93c6dc7812d0..76de10650556 100644
+--- a/arch/x86/entry/vdso/vdso-layout.lds.S
++++ b/arch/x86/entry/vdso/vdso-layout.lds.S
+@@ -52,6 +52,13 @@ SECTIONS
+ 		*(.gnu.linkonce.b.*)
+ 	}						:text
+ 
++	/*
++	 * Discard .note.gnu.property sections which are unused and have
++	 * different alignment requirement from vDSO note sections.
++	 */
++	/DISCARD/ : {
++		*(.note.gnu.property)
++	}
+ 	.note		: { *(.note.*) }		:text	:note
+ 
+ 	.eh_frame_hdr	: { *(.eh_frame_hdr) }		:text	:eh_frame_hdr
+-- 
+2.24.1
+
diff --git a/0002-Add-RUNTIME_DISCARD_EXIT-to-generic-DISCARDS.patch b/0002-Add-RUNTIME_DISCARD_EXIT-to-generic-DISCARDS.patch
new file mode 100644
index 000000000..73ae84a64
--- /dev/null
+++ b/0002-Add-RUNTIME_DISCARD_EXIT-to-generic-DISCARDS.patch
@@ -0,0 +1,54 @@
+From 911360d98cdf7fb40772bd18dbd5dcf767a2597d Mon Sep 17 00:00:00 2001
+From: "H.J. Lu" <hjl.tools@gmail.com>
+Date: Thu, 30 Jan 2020 12:31:22 -0800
+Subject: [PATCH 2/3] Add RUNTIME_DISCARD_EXIT to generic DISCARDS
+
+In x86 kernel, .exit.text and .exit.data sections are discarded at
+runtime, not by linker.  Add RUNTIME_DISCARD_EXIT to generic DISCARDS
+and define it in x86 kernel linker script to keep them.
+
+Signed-off-by: H.J. Lu <hjl.tools@gmail.com>
+Reviewed-by: Kees Cook <keescook@chromium.org>
+---
+ arch/x86/kernel/vmlinux.lds.S     |  1 +
+ include/asm-generic/vmlinux.lds.h | 10 ++++++++--
+ 2 files changed, 9 insertions(+), 2 deletions(-)
+
+diff --git a/arch/x86/kernel/vmlinux.lds.S b/arch/x86/kernel/vmlinux.lds.S
+index 3a1a819da137..a38a92d9e997 100644
+--- a/arch/x86/kernel/vmlinux.lds.S
++++ b/arch/x86/kernel/vmlinux.lds.S
+@@ -21,6 +21,7 @@
+ #define LOAD_OFFSET __START_KERNEL_map
+ #endif
+ 
++#define RUNTIME_DISCARD_EXIT
+ #define EMITS_PT_NOTE
+ #define RO_EXCEPTION_TABLE_ALIGN	16
+ 
+diff --git a/include/asm-generic/vmlinux.lds.h b/include/asm-generic/vmlinux.lds.h
+index e00f41aa8ec4..6b943fb8c5fd 100644
+--- a/include/asm-generic/vmlinux.lds.h
++++ b/include/asm-generic/vmlinux.lds.h
+@@ -894,10 +894,16 @@
+  * section definitions so that such archs put those in earlier section
+  * definitions.
+  */
++#ifdef RUNTIME_DISCARD_EXIT
++#define EXIT_DISCARDS
++#else
++#define EXIT_DISCARDS							\
++	EXIT_TEXT							\
++	EXIT_DATA
++#endif
+ #define DISCARDS							\
+ 	/DISCARD/ : {							\
+-	EXIT_TEXT							\
+-	EXIT_DATA							\
++	EXIT_DISCARDS							\
+ 	EXIT_CALL							\
+ 	*(.discard)							\
+ 	*(.discard.*)							\
+-- 
+2.24.1
+
diff --git a/0003-Discard-.note.gnu.property-sections-in-generic-NOTES.patch b/0003-Discard-.note.gnu.property-sections-in-generic-NOTES.patch
new file mode 100644
index 000000000..14e776298
--- /dev/null
+++ b/0003-Discard-.note.gnu.property-sections-in-generic-NOTES.patch
@@ -0,0 +1,81 @@
+From 71bb971dd76eeacd351690f28864ad5c5bec3691 Mon Sep 17 00:00:00 2001
+From: "H.J. Lu" <hjl.tools@gmail.com>
+Date: Thu, 30 Jan 2020 12:39:09 -0800
+Subject: [PATCH 3/3] Discard .note.gnu.property sections in generic NOTES
+
+With the command-line option, -mx86-used-note=yes, the x86 assembler
+in binutils 2.32 and above generates a program property note in a note
+section, .note.gnu.property, to encode used x86 ISAs and features.  But
+kernel linker script only contains a single NOTE segment:
+
+PHDRS {
+ text PT_LOAD FLAGS(5);
+ data PT_LOAD FLAGS(6);
+ percpu PT_LOAD FLAGS(6);
+ init PT_LOAD FLAGS(7);
+ note PT_NOTE FLAGS(0);
+}
+SECTIONS
+{
+...
+ .notes : AT(ADDR(.notes) - 0xffffffff80000000) { __start_notes = .; KEEP(*(.not
+e.*)) __stop_notes = .; } :text :note
+...
+}
+
+The NOTE segment generated by kernel linker script is aligned to 4 bytes.
+But .note.gnu.property section must be aligned to 8 bytes on x86-64 and
+we get
+
+[hjl@gnu-skx-1 linux]$ readelf -n vmlinux
+
+Displaying notes found in: .notes
+  Owner                Data size Description
+  Xen                  0x00000006 Unknown note type: (0x00000006)
+   description data: 6c 69 6e 75 78 00
+  Xen                  0x00000004 Unknown note type: (0x00000007)
+   description data: 32 2e 36 00
+  xen-3.0              0x00000005 Unknown note type: (0x006e6558)
+   description data: 08 00 00 00 03
+readelf: Warning: note with invalid namesz and/or descsz found at offset 0x50
+readelf: Warning:  type: 0xffffffff, namesize: 0x006e6558, descsize:
+0x80000000, alignment: 8
+[hjl@gnu-skx-1 linux]$
+
+Since note.gnu.property section in kernel image is never used, this patch
+discards .note.gnu.property sections in kernel linker script by adding
+
+/DISCARD/ : {
+  *(.note.gnu.property)
+}
+
+before kernel NOTE segment in generic NOTES.
+
+Signed-off-by: H.J. Lu <hjl.tools@gmail.com>
+Reviewed-by: Kees Cook <keescook@chromium.org>
+---
+ include/asm-generic/vmlinux.lds.h | 7 +++++++
+ 1 file changed, 7 insertions(+)
+
+diff --git a/include/asm-generic/vmlinux.lds.h b/include/asm-generic/vmlinux.lds.h
+index 6b943fb8c5fd..6659a7c07c84 100644
+--- a/include/asm-generic/vmlinux.lds.h
++++ b/include/asm-generic/vmlinux.lds.h
+@@ -818,7 +818,14 @@
+ #define TRACEDATA
+ #endif
+ 
++/*
++ * Discard .note.gnu.property sections which are unused and have
++ * different alignment requirement from kernel note sections.
++ */
+ #define NOTES								\
++	/DISCARD/ : {							\
++		*(.note.gnu.property)					\
++	}								\
+ 	.notes : AT(ADDR(.notes) - LOAD_OFFSET) {			\
+ 		__start_notes = .;					\
+ 		KEEP(*(.note.*))					\
+-- 
+2.24.1
+
diff --git a/kernel.spec b/kernel.spec
index 061aaf9ff..d75d5869f 100644
--- a/kernel.spec
+++ b/kernel.spec
@@ -1,4 +1,7 @@
 Patch100000: 0001-Don-t-enable-GPE-if-GPE-dispatch-failed.patch
+Patch100001: 0001-x86-Discard-.note.gnu.property-sections-in-vDSO.patch
+Patch100002: 0002-Add-RUNTIME_DISCARD_EXIT-to-generic-DISCARDS.patch
+Patch100003: 0003-Discard-.note.gnu.property-sections-in-generic-NOTES.patch
 
 # We have to override the new %%install behavior because, well... the kernel is special.
 %global __spec_install_pre %{___build_pre}
-- 
2.25.1

