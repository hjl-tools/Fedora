From d0047db6a163c81f86d3920ca6fb777455ff9899 Mon Sep 17 00:00:00 2001
From: "H.J. Lu" <hjl.tools@gmail.com>
Date: Fri, 26 Jul 2013 09:05:38 -0700
Subject: [PATCH 1/3] Add x32 support to Fedora 22

---
 rpm-4.12-x32-1.patch | 115 +++++++++++++++++++++++++++++++++++++++++++
 rpm.spec             |   2 +
 2 files changed, 117 insertions(+)
 create mode 100644 rpm-4.12-x32-1.patch

diff --git a/rpm-4.12-x32-1.patch b/rpm-4.12-x32-1.patch
new file mode 100644
index 0000000..6de5b00
--- /dev/null
+++ b/rpm-4.12-x32-1.patch
@@ -0,0 +1,115 @@
+From aef7adf241fe4394f4f80970dd52465d723688a6 Mon Sep 17 00:00:00 2001
+From: "H.J. Lu" <hjl.tools@gmail.com>
+Date: Mon, 15 Dec 2014 10:04:54 -0800
+Subject: [PATCH] Add x32 support to rpm 4.12
+
+---
+ installplatform   | 7 +++++++
+ lib/transaction.c | 9 ++++++---
+ rpmrc.in          | 6 +++++-
+ tools/elfdeps.c   | 3 ++-
+ 4 files changed, 20 insertions(+), 5 deletions(-)
+
+diff --git a/installplatform b/installplatform
+index 98b87f3..b0279f7 100755
+--- a/installplatform
++++ b/installplatform
+@@ -84,6 +84,13 @@ for ARCH in noarch `grep ^arch_canon $RPMRC | cut -d: -f2`; do
+ 	CANONARCH=x86_64
+ 	CANONCOLOR=3
+ 	;;
++    x32)
++	ISANAME=x86
++	ISABITS=x32
++	CANONARCH=${ARCH}
++	CANONCOLOR=0
++	LIB=libx32
++	;;
+     ia64)
+ 	ISANAME=ia
+ 	ISABITS=64
+diff --git a/lib/transaction.c b/lib/transaction.c
+index 736f64d..d305753 100644
+--- a/lib/transaction.c
++++ b/lib/transaction.c
+@@ -396,6 +396,7 @@ static void handleInstInstalledFile(const rpmts ts, rpmte p, rpmfiles fi, int fx
+ 
+     if (rpmfilesCompare(otherFi, ofx, fi, fx)) {
+ 	int rConflicts = 1;
++	int cConflicts;
+ 	char rState = RPMFILE_STATE_REPLACED;
+ 
+ 	/*
+@@ -414,10 +415,12 @@ static void handleInstInstalledFile(const rpmts ts, rpmte p, rpmfiles fi, int fx
+ 	    }
+ 	}
+ 
++	/* If enabled, resolve colored conflicts to preferred type */
++	cConflicts = handleColorConflict(ts, fs, fi, fx,
++					 NULL, otherFi, ofx);
++
+ 	if (rConflicts) {
+-	    /* If enabled, resolve colored conflicts to preferred type */
+-	    rConflicts = handleColorConflict(ts, fs, fi, fx,
+-					     NULL, otherFi, ofx);
++	    rConflicts = cConflicts;
+ 	    /* If resolved, we need to adjust in-rpmdb state too */
+ 	    if (rConflicts == 0 && rpmfsGetAction(fs, fx) == FA_CREATE)
+ 		rState = RPMFILE_STATE_WRONGCOLOR;
+diff --git a/rpmrc.in b/rpmrc.in
+index 20b531a..3158fa7 100644
+--- a/rpmrc.in
++++ b/rpmrc.in
+@@ -24,6 +24,7 @@ optflags: ia64 -O2 -g
+ optflags: x86_64 -O2 -g
+ optflags: amd64 -O2 -g
+ optflags: ia32e -O2 -g
++optflags: x32 -O2 -g -mx32
+ 
+ optflags: alpha -O2 -g -mieee
+ optflags: alphaev5 -O2 -g -mieee -mtune=ev5
+@@ -145,6 +146,7 @@ arch_canon:	x86_64:	x86_64	1
+ arch_canon:	amd64:	amd64	1
+ arch_canon:	ia32e:	ia32e	1
+ arch_canon:	em64t:	em64t	1
++arch_canon:	x32:	x32	1
+ 
+ arch_canon:	alpha:	alpha	2
+ arch_canon:	alphaev5: alphaev5	2
+@@ -327,6 +329,7 @@ buildarchtranslate: ia64: ia64
+ buildarchtranslate: x86_64: x86_64
+ buildarchtranslate: amd64: x86_64
+ buildarchtranslate: ia32e: x86_64
++buildarchtranslate: x32: x32
+ 
+ buildarchtranslate: sh3: sh3
+ buildarchtranslate: sh4: sh4
+@@ -422,9 +425,10 @@ arch_compat: s390x: s390 noarch
+ 
+ arch_compat: ia64: noarch
+ 
+-arch_compat: x86_64: amd64 em64t athlon noarch
++arch_compat: x86_64: amd64 em64t x32 athlon noarch
+ arch_compat: amd64: x86_64 em64t athlon noarch
+ arch_compat: ia32e: x86_64 em64t athlon noarch
++arch_compat: x32: x86_64 athlon noarch
+ 
+ arch_compat: sh3: noarch
+ arch_compat: sh4: noarch
+diff --git a/tools/elfdeps.c b/tools/elfdeps.c
+index cf22cc6..9b502f8 100644
+--- a/tools/elfdeps.c
++++ b/tools/elfdeps.c
+@@ -92,7 +92,8 @@ static const char *mkmarker(GElf_Ehdr *ehdr)
+ 	    marker = "(64bit)";
+ 	    break;
+ 	}
+-    }
++    } else if (ehdr->e_machine == EM_X86_64)
++	marker = "(x32bit)";
+     return marker;
+ }
+ 
+-- 
+1.9.3
+
diff --git a/rpm.spec b/rpm.spec
index f4eeb03..096207f 100644
--- a/rpm.spec
+++ b/rpm.spec
@@ -1,3 +1,5 @@
+PATCH100000: rpm-4.12-x32-1.patch
+
 # build against xz?
 %bcond_without xz
 # just for giggles, option to build with internal Berkeley DB
-- 
2.25.1

