From 57989816bc430a1245d83c9cccf40915cec776c4 Mon Sep 17 00:00:00 2001
From: "H.J. Lu" <hjl.tools@gmail.com>
Date: Tue, 30 Jun 2020 09:32:21 -0700
Subject: [PATCH] Update binutils-s390-build.patch against master branch

---
 binutils-s390-build.patch | 130 ++++++++++++++++++--------------------
 1 file changed, 63 insertions(+), 67 deletions(-)

diff --git a/binutils-s390-build.patch b/binutils-s390-build.patch
index 5a11748..dbcc289 100644
--- a/binutils-s390-build.patch
+++ b/binutils-s390-build.patch
@@ -1,7 +1,16 @@
-diff -rup binutils.orig/libctf/ctf-create.c binutils-2.34.0/libctf/ctf-create.c
---- binutils.orig/libctf/ctf-create.c	2020-06-16 12:06:28.466468753 +0100
-+++ binutils-2.34.0/libctf/ctf-create.c	2020-06-16 12:16:19.744482839 +0100
-@@ -871,7 +871,8 @@ ctf_add_encoded (ctf_file_t *fp, uint32_
+diff --git a/libctf/ctf-create.c b/libctf/ctf-create.c
+index 808da372de..099c569906 100644
+--- a/libctf/ctf-create.c
++++ b/libctf/ctf-create.c
+@@ -807,6 +807,7 @@ ctf_add_generic (ctf_file_t *fp, uint32_t flag, const char *name, int kind,
+ {
+   ctf_dtdef_t *dtd;
+   ctf_id_t type;
++  *rp = NULL;
+ 
+   if (flag != CTF_ADD_NONROOT && flag != CTF_ADD_ROOT)
+     return (ctf_set_errno (fp, EINVAL));
+@@ -880,7 +881,8 @@ ctf_add_encoded (ctf_file_t *fp, uint32_t flag,
  
    if ((type = ctf_add_generic (fp, flag, name, kind, &dtd)) == CTF_ERR)
      return CTF_ERR;		/* errno is set for us.  */
@@ -11,7 +20,7 @@ diff -rup binutils.orig/libctf/ctf-create.c binutils-2.34.0/libctf/ctf-create.c
    dtd->dtd_data.ctt_info = CTF_TYPE_INFO (kind, flag, 0);
    dtd->dtd_data.ctt_size = clp2 (P2ROUNDUP (ep->cte_bits, CHAR_BIT)
  				 / CHAR_BIT);
-@@ -896,6 +897,8 @@ ctf_add_reftype (ctf_file_t *fp, uint32_
+@@ -905,6 +907,8 @@ ctf_add_reftype (ctf_file_t *fp, uint32_t flag, ctf_id_t ref, uint32_t kind)
  
    if ((type = ctf_add_generic (fp, flag, NULL, kind, &dtd)) == CTF_ERR)
      return CTF_ERR;		/* errno is set for us.  */
@@ -20,7 +29,7 @@ diff -rup binutils.orig/libctf/ctf-create.c binutils-2.34.0/libctf/ctf-create.c
  
    dtd->dtd_data.ctt_info = CTF_TYPE_INFO (kind, flag, 0);
    dtd->dtd_data.ctt_type = (uint32_t) ref;
-@@ -958,6 +961,8 @@ ctf_add_slice (ctf_file_t *fp, uint32_t
+@@ -967,6 +971,8 @@ ctf_add_slice (ctf_file_t *fp, uint32_t flag, ctf_id_t ref,
  
    if ((type = ctf_add_generic (fp, flag, NULL, CTF_K_SLICE, &dtd)) == CTF_ERR)
      return CTF_ERR;		/* errno is set for us.  */
@@ -29,7 +38,7 @@ diff -rup binutils.orig/libctf/ctf-create.c binutils-2.34.0/libctf/ctf-create.c
  
    dtd->dtd_data.ctt_info = CTF_TYPE_INFO (CTF_K_SLICE, flag, 0);
    dtd->dtd_data.ctt_size = clp2 (P2ROUNDUP (ep->cte_bits, CHAR_BIT)
-@@ -1008,6 +1013,8 @@ ctf_add_array (ctf_file_t *fp, uint32_t
+@@ -1017,6 +1023,8 @@ ctf_add_array (ctf_file_t *fp, uint32_t flag, const ctf_arinfo_t *arp)
  
    if ((type = ctf_add_generic (fp, flag, NULL, CTF_K_ARRAY, &dtd)) == CTF_ERR)
      return CTF_ERR;		/* errno is set for us.  */
@@ -38,7 +47,7 @@ diff -rup binutils.orig/libctf/ctf-create.c binutils-2.34.0/libctf/ctf-create.c
  
    dtd->dtd_data.ctt_info = CTF_TYPE_INFO (CTF_K_ARRAY, flag, 0);
    dtd->dtd_data.ctt_size = 0;
-@@ -1075,6 +1082,8 @@ ctf_add_function (ctf_file_t *fp, uint32
+@@ -1084,6 +1092,8 @@ ctf_add_function (ctf_file_t *fp, uint32_t flag,
        free (vdat);
        return CTF_ERR;		   /* errno is set for us.  */
      }
@@ -47,7 +56,7 @@ diff -rup binutils.orig/libctf/ctf-create.c binutils-2.34.0/libctf/ctf-create.c
  
    dtd->dtd_data.ctt_info = CTF_TYPE_INFO (CTF_K_FUNCTION, flag, vlen);
    dtd->dtd_data.ctt_type = (uint32_t) ctc->ctc_return;
-@@ -1104,6 +1113,8 @@ ctf_add_struct_sized (ctf_file_t *fp, ui
+@@ -1112,6 +1122,8 @@ ctf_add_struct_sized (ctf_file_t *fp, uint32_t flag, const char *name,
    else if ((type = ctf_add_generic (fp, flag, name, CTF_K_STRUCT,
  				    &dtd)) == CTF_ERR)
      return CTF_ERR;		/* errno is set for us.  */
@@ -56,7 +65,7 @@ diff -rup binutils.orig/libctf/ctf-create.c binutils-2.34.0/libctf/ctf-create.c
  
    dtd->dtd_data.ctt_info = CTF_TYPE_INFO (CTF_K_STRUCT, flag, 0);
  
-@@ -1141,6 +1152,8 @@ ctf_add_union_sized (ctf_file_t *fp, uin
+@@ -1149,6 +1161,8 @@ ctf_add_union_sized (ctf_file_t *fp, uint32_t flag, const char *name,
    else if ((type = ctf_add_generic (fp, flag, name, CTF_K_UNION,
  				    &dtd)) == CTF_ERR)
      return CTF_ERR;		/* errno is set for us */
@@ -65,7 +74,7 @@ diff -rup binutils.orig/libctf/ctf-create.c binutils-2.34.0/libctf/ctf-create.c
  
    dtd->dtd_data.ctt_info = CTF_TYPE_INFO (CTF_K_UNION, flag, 0);
  
-@@ -1177,6 +1190,8 @@ ctf_add_enum (ctf_file_t *fp, uint32_t f
+@@ -1185,6 +1199,8 @@ ctf_add_enum (ctf_file_t *fp, uint32_t flag, const char *name)
    else if ((type = ctf_add_generic (fp, flag, name, CTF_K_ENUM,
  				    &dtd)) == CTF_ERR)
      return CTF_ERR;		/* errno is set for us.  */
@@ -74,16 +83,16 @@ diff -rup binutils.orig/libctf/ctf-create.c binutils-2.34.0/libctf/ctf-create.c
  
    dtd->dtd_data.ctt_info = CTF_TYPE_INFO (CTF_K_ENUM, flag, 0);
    dtd->dtd_data.ctt_size = fp->ctf_dmodel->ctd_int;
-@@ -1230,6 +1245,8 @@ ctf_add_forward (ctf_file_t *fp, uint32_
+@@ -1241,6 +1257,8 @@ ctf_add_forward (ctf_file_t *fp, uint32_t flag, const char *name,
  
-   if ((type = ctf_add_generic (fp, flag, name, CTF_K_FORWARD,&dtd)) == CTF_ERR)
+   if ((type = ctf_add_generic (fp, flag, name, kind, &dtd)) == CTF_ERR)
      return CTF_ERR;		/* errno is set for us.  */
 +  if (dtd == NULL)
 +    return CTF_ERR;
  
    dtd->dtd_data.ctt_info = CTF_TYPE_INFO (CTF_K_FORWARD, flag, 0);
    dtd->dtd_data.ctt_type = kind;
-@@ -1254,6 +1271,8 @@ ctf_add_typedef (ctf_file_t *fp, uint32_
+@@ -1265,6 +1283,8 @@ ctf_add_typedef (ctf_file_t *fp, uint32_t flag, const char *name,
    if ((type = ctf_add_generic (fp, flag, name, CTF_K_TYPEDEF,
  			       &dtd)) == CTF_ERR)
      return CTF_ERR;		/* errno is set for us.  */
@@ -92,10 +101,11 @@ diff -rup binutils.orig/libctf/ctf-create.c binutils-2.34.0/libctf/ctf-create.c
  
    dtd->dtd_data.ctt_info = CTF_TYPE_INFO (CTF_K_TYPEDEF, flag, 0);
    dtd->dtd_data.ctt_type = (uint32_t) ref;
-diff -rup binutils.orig/libctf/ctf-types.c binutils-2.34.0/libctf/ctf-types.c
---- binutils.orig/libctf/ctf-types.c	2020-06-16 12:06:28.466468753 +0100
-+++ binutils-2.34.0/libctf/ctf-types.c	2020-06-16 12:10:58.033563365 +0100
-@@ -748,7 +748,7 @@ ctf_type_encoding (ctf_file_t *fp, ctf_i
+diff --git a/libctf/ctf-types.c b/libctf/ctf-types.c
+index cd910434ea..6b707767b0 100644
+--- a/libctf/ctf-types.c
++++ b/libctf/ctf-types.c
+@@ -748,7 +748,7 @@ ctf_type_encoding (ctf_file_t *fp, ctf_id_t type, ctf_encoding_t *ep)
  	case CTF_K_SLICE:
  	  {
  	    const ctf_slice_t *slice;
@@ -104,34 +114,11 @@ diff -rup binutils.orig/libctf/ctf-types.c binutils-2.34.0/libctf/ctf-types.c
  	    slice = &dtd->dtd_u.dtu_slice;
  
  	    data = ctf_type_encoding (fp, slice->cts_type, &underlying_en);
-diff -rup binutils.orig/opcodes/s390-mkopc.c binutils-2.34.0/opcodes/s390-mkopc.c
---- binutils.orig/opcodes/s390-mkopc.c	2020-06-16 12:06:28.447468816 +0100
-+++ binutils-2.34.0/opcodes/s390-mkopc.c	2020-06-16 12:17:10.783311417 +0100
-@@ -168,7 +168,7 @@ insertExpandedMnemonic (char *opcode, ch
-   int mask_start, i = 0, tag_found = 0, reading_number = 0;
-   int number_p = 0, suffix_p = 0, prefix_p = 0;
-   const struct s390_cond_ext_format *ext_table;
--  int ext_table_length;
-+  int ext_table_length = 0;
- 
-   if (!(tag = strpbrk (mnemonic, "*$")))
-     {
-Only in binutils.orig/libctf: .#ctf-create.c
-diff -rup binutils.orig/libctf/ctf-create.c binutils-2.34.0/libctf/ctf-create.c
---- binutils.orig/libctf/ctf-create.c	2020-06-16 14:49:06.080801319 +0100
-+++ binutils-2.34.0/libctf/ctf-create.c	2020-06-16 14:49:08.046794113 +0100
-@@ -798,6 +798,7 @@ ctf_add_generic (ctf_file_t *fp, uint32_
- {
-   ctf_dtdef_t *dtd;
-   ctf_id_t type;
-+  *rp = NULL;
- 
-   if (flag != CTF_ADD_NONROOT && flag != CTF_ADD_ROOT)
-     return (ctf_set_errno (fp, EINVAL));
-diff -rup binutils.orig/opcodes/fr30-ibld.c binutils-2.34.0/opcodes/fr30-ibld.c
---- binutils.orig/opcodes/fr30-ibld.c	2020-06-16 14:49:06.074801341 +0100
-+++ binutils-2.34.0/opcodes/fr30-ibld.c	2020-06-16 16:43:31.428324833 +0100
-@@ -810,7 +810,7 @@ fr30_cgen_extract_operand (CGEN_CPU_DESC
+diff --git a/opcodes/fr30-ibld.c b/opcodes/fr30-ibld.c
+index 6816154ab2..7b3de99d8d 100644
+--- a/opcodes/fr30-ibld.c
++++ b/opcodes/fr30-ibld.c
+@@ -813,7 +813,7 @@ fr30_cgen_extract_operand (CGEN_CPU_DESC cd,
        break;
      case FR30_OPERAND_DIR10 :
        {
@@ -140,7 +127,7 @@ diff -rup binutils.orig/opcodes/fr30-ibld.c binutils-2.34.0/opcodes/fr30-ibld.c
          length = extract_normal (cd, ex_info, insn_value, 0, 0, 8, 8, 16, total_length, pc, & value);
          value = ((value) << (2));
          fields->f_dir10 = value;
-@@ -821,7 +821,7 @@ fr30_cgen_extract_operand (CGEN_CPU_DESC
+@@ -824,7 +824,7 @@ fr30_cgen_extract_operand (CGEN_CPU_DESC cd,
        break;
      case FR30_OPERAND_DIR9 :
        {
@@ -149,7 +136,7 @@ diff -rup binutils.orig/opcodes/fr30-ibld.c binutils-2.34.0/opcodes/fr30-ibld.c
          length = extract_normal (cd, ex_info, insn_value, 0, 0, 8, 8, 16, total_length, pc, & value);
          value = ((value) << (1));
          fields->f_dir9 = value;
-@@ -829,7 +829,7 @@ fr30_cgen_extract_operand (CGEN_CPU_DESC
+@@ -832,7 +832,7 @@ fr30_cgen_extract_operand (CGEN_CPU_DESC cd,
        break;
      case FR30_OPERAND_DISP10 :
        {
@@ -158,7 +145,7 @@ diff -rup binutils.orig/opcodes/fr30-ibld.c binutils-2.34.0/opcodes/fr30-ibld.c
          length = extract_normal (cd, ex_info, insn_value, 0|(1<<CGEN_IFLD_SIGNED), 0, 4, 8, 16, total_length, pc, & value);
          value = ((value) * (4));
          fields->f_disp10 = value;
-@@ -840,7 +840,7 @@ fr30_cgen_extract_operand (CGEN_CPU_DESC
+@@ -843,7 +843,7 @@ fr30_cgen_extract_operand (CGEN_CPU_DESC cd,
        break;
      case FR30_OPERAND_DISP9 :
        {
@@ -167,7 +154,7 @@ diff -rup binutils.orig/opcodes/fr30-ibld.c binutils-2.34.0/opcodes/fr30-ibld.c
          length = extract_normal (cd, ex_info, insn_value, 0|(1<<CGEN_IFLD_SIGNED), 0, 4, 8, 16, total_length, pc, & value);
          value = ((value) * (2));
          fields->f_disp9 = value;
-@@ -865,7 +865,7 @@ fr30_cgen_extract_operand (CGEN_CPU_DESC
+@@ -868,7 +868,7 @@ fr30_cgen_extract_operand (CGEN_CPU_DESC cd,
        break;
      case FR30_OPERAND_LABEL12 :
        {
@@ -176,7 +163,7 @@ diff -rup binutils.orig/opcodes/fr30-ibld.c binutils-2.34.0/opcodes/fr30-ibld.c
          length = extract_normal (cd, ex_info, insn_value, 0|(1<<CGEN_IFLD_SIGNED)|(1<<CGEN_IFLD_PCREL_ADDR), 0, 5, 11, 16, total_length, pc, & value);
          value = ((((value) * (2))) + (((pc) + (2))));
          fields->f_rel12 = value;
-@@ -873,7 +873,7 @@ fr30_cgen_extract_operand (CGEN_CPU_DESC
+@@ -876,7 +876,7 @@ fr30_cgen_extract_operand (CGEN_CPU_DESC cd,
        break;
      case FR30_OPERAND_LABEL9 :
        {
@@ -185,7 +172,7 @@ diff -rup binutils.orig/opcodes/fr30-ibld.c binutils-2.34.0/opcodes/fr30-ibld.c
          length = extract_normal (cd, ex_info, insn_value, 0|(1<<CGEN_IFLD_SIGNED)|(1<<CGEN_IFLD_PCREL_ADDR), 0, 8, 8, 16, total_length, pc, & value);
          value = ((((value) * (2))) + (((pc) + (2))));
          fields->f_rel9 = value;
-@@ -881,7 +881,7 @@ fr30_cgen_extract_operand (CGEN_CPU_DESC
+@@ -884,7 +884,7 @@ fr30_cgen_extract_operand (CGEN_CPU_DESC cd,
        break;
      case FR30_OPERAND_M4 :
        {
@@ -194,7 +181,16 @@ diff -rup binutils.orig/opcodes/fr30-ibld.c binutils-2.34.0/opcodes/fr30-ibld.c
          length = extract_normal (cd, ex_info, insn_value, 0, 0, 8, 4, 16, total_length, pc, & value);
          value = ((value) | (-16));
          fields->f_m4 = value;
-@@ -911,7 +911,7 @@ fr30_cgen_extract_operand (CGEN_CPU_DESC
+@@ -906,7 +906,7 @@ fr30_cgen_extract_operand (CGEN_CPU_DESC cd,
+       break;
+     case FR30_OPERAND_S10 :
+       {
+-        long value;
++        long value = 0;
+         length = extract_normal (cd, ex_info, insn_value, 0|(1<<CGEN_IFLD_SIGNED), 0, 8, 8, 16, total_length, pc, & value);
+         value = ((value) * (4));
+         fields->f_s10 = value;
+@@ -914,7 +914,7 @@ fr30_cgen_extract_operand (CGEN_CPU_DESC cd,
        break;
      case FR30_OPERAND_U10 :
        {
@@ -203,7 +199,7 @@ diff -rup binutils.orig/opcodes/fr30-ibld.c binutils-2.34.0/opcodes/fr30-ibld.c
          length = extract_normal (cd, ex_info, insn_value, 0, 0, 8, 8, 16, total_length, pc, & value);
          value = ((value) << (2));
          fields->f_u10 = value;
-@@ -928,7 +928,7 @@ fr30_cgen_extract_operand (CGEN_CPU_DESC
+@@ -931,7 +931,7 @@ fr30_cgen_extract_operand (CGEN_CPU_DESC cd,
        break;
      case FR30_OPERAND_UDISP6 :
        {
@@ -212,16 +208,16 @@ diff -rup binutils.orig/opcodes/fr30-ibld.c binutils-2.34.0/opcodes/fr30-ibld.c
          length = extract_normal (cd, ex_info, insn_value, 0, 0, 8, 4, 16, total_length, pc, & value);
          value = ((value) << (2));
          fields->f_udisp6 = value;
-
-diff -rup binutils.orig/opcodes/fr30-ibld.c binutils-2.34.0/opcodes/fr30-ibld.c
---- binutils.orig/opcodes/fr30-ibld.c	2020-06-16 17:10:22.540563440 +0100
-+++ binutils-2.34.0/opcodes/fr30-ibld.c	2020-06-16 17:10:48.966468906 +0100
-@@ -903,7 +903,7 @@ fr30_cgen_extract_operand (CGEN_CPU_DESC
-       break;
-     case FR30_OPERAND_S10 :
-       {
--        long value;
-+        long value = 0;
-         length = extract_normal (cd, ex_info, insn_value, 0|(1<<CGEN_IFLD_SIGNED), 0, 8, 8, 16, total_length, pc, & value);
-         value = ((value) * (4));
-         fields->f_s10 = value;
+diff --git a/opcodes/s390-mkopc.c b/opcodes/s390-mkopc.c
+index c593fb6079..e6f8d42c87 100644
+--- a/opcodes/s390-mkopc.c
++++ b/opcodes/s390-mkopc.c
+@@ -168,7 +168,7 @@ insertExpandedMnemonic (char *opcode, char *mnemonic, char *format,
+   int mask_start, i = 0, tag_found = 0, reading_number = 0;
+   int number_p = 0, suffix_p = 0, prefix_p = 0;
+   const struct s390_cond_ext_format *ext_table;
+-  int ext_table_length;
++  int ext_table_length = 0;
+ 
+   if (!(tag = strpbrk (mnemonic, "*$")))
+     {
-- 
2.26.2

