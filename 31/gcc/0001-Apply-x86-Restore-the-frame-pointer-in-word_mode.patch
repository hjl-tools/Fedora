From 934be22458224ae822668cd49c6f902abce0cb44 Mon Sep 17 00:00:00 2001
From: "H.J. Lu" <hjl.tools@gmail.com>
Date: Sun, 12 Apr 2020 11:19:48 -0700
Subject: [PATCH 1/2] Apply x86: Restore the frame pointer in word_mode

---
 ...store-the-frame-pointer-in-word_mode.patch | 50 +++++++++++++++++++
 gcc.spec                                      |  2 +
 2 files changed, 52 insertions(+)
 create mode 100644 0001-x86-Restore-the-frame-pointer-in-word_mode.patch

diff --git a/0001-x86-Restore-the-frame-pointer-in-word_mode.patch b/0001-x86-Restore-the-frame-pointer-in-word_mode.patch
new file mode 100644
index 0000000..81531fc
--- /dev/null
+++ b/0001-x86-Restore-the-frame-pointer-in-word_mode.patch
@@ -0,0 +1,50 @@
+From df3d063dd31c8a78e89770c569ee66073feac629 Mon Sep 17 00:00:00 2001
+From: "H.J. Lu" <hjl.tools@gmail.com>
+Date: Sun, 12 Apr 2020 10:02:42 -0700
+Subject: [PATCH] x86: Restore the frame pointer in word_mode
+
+We must restore the frame pointer in word_mode for eh_return epilogues
+since the upper 32 bits of RBP register can have any values.
+
+Tested on Linux/x32 and Linux/x86-64.
+
+	PR target/94556
+	* config/i386/i386.c (ix86_expand_epilogue): Restore the frame
+	pointer in word_mode for eh_return epilogues.
+---
+ gcc/config/i386/i386.c | 12 +++++++++---
+ 1 file changed, 9 insertions(+), 3 deletions(-)
+
+diff --git a/gcc/config/i386/i386.c b/gcc/config/i386/i386.c
+index 5d12d82db5b..0ea53130f63 100644
+--- a/gcc/config/i386/i386.c
++++ b/gcc/config/i386/i386.c
+@@ -14347,8 +14347,14 @@ ix86_expand_epilogue (int style)
+ 	      t = plus_constant (Pmode, t, m->fs.fp_offset - UNITS_PER_WORD);
+ 	      emit_insn (gen_rtx_SET (sa, t));
+ 
+-	      t = gen_frame_mem (Pmode, hard_frame_pointer_rtx);
+-	      insn = emit_move_insn (hard_frame_pointer_rtx, t);
++	      /* NB: eh_return epilogues must restore the frame pointer
++		 in word_mode since the upper 32 bits of RBP register
++		 can have any values.  */
++	      t = gen_frame_mem (word_mode, hard_frame_pointer_rtx);
++	      rtx frame_reg = hard_frame_pointer_rtx;
++	      if (Pmode != word_mode)
++		frame_reg = gen_rtx_REG (word_mode, REGNO (frame_reg));
++	      insn = emit_move_insn (frame_reg, t);
+ 
+ 	      /* Note that we use SA as a temporary CFA, as the return
+ 		 address is at the proper place relative to it.  We
+@@ -14363,7 +14369,7 @@ ix86_expand_epilogue (int style)
+ 	      add_reg_note (insn, REG_CFA_DEF_CFA,
+ 			    plus_constant (Pmode, sa, UNITS_PER_WORD));
+ 	      ix86_add_queued_cfa_restore_notes (insn);
+-	      add_reg_note (insn, REG_CFA_RESTORE, hard_frame_pointer_rtx);
++	      add_reg_note (insn, REG_CFA_RESTORE, frame_reg);
+ 	      RTX_FRAME_RELATED_P (insn) = 1;
+ 
+ 	      m->fs.cfa_reg = sa;
+-- 
+2.26.0
+
diff --git a/gcc.spec b/gcc.spec
index 74e47f0..84e71f8 100644
--- a/gcc.spec
+++ b/gcc.spec
@@ -1,5 +1,6 @@
 Patch100001: 0001-x32-Add-x32-support-to-mtls-dialect-gnu2.patch
 Patch100002: 0002-i386-Do-GNU2-TLS-address-computation-in-ptr_mode.patch
+Patch100003: 0001-x86-Restore-the-frame-pointer-in-word_mode.patch
 
 %global DATE 20200408
 %global gitrev 3535aa1f5e6c9b2de6a60d84460b8c5945a77ab4
@@ -792,6 +793,7 @@ cd ..
 
 %patch100001 -p1 -b .tls-gnu2
 %patch100002 -p1 -b .tls-gnu2-ptr-mode
+%patch100003 -p1 -b .frame-reg
 
 echo 'Red Hat %{version}-%{gcc_release}' > gcc/DEV-PHASE
 
-- 
2.26.0

