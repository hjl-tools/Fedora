From 11b993b2819e53c9a846d3f02ed5ac99cb7c79c6 Mon Sep 17 00:00:00 2001
From: "H.J. Lu" <hjl.tools@gmail.com>
Date: Sat, 21 Mar 2020 03:57:12 -0700
Subject: [PATCH 1/2] Cherry pick Remove ARCH_CET_MARK_LEGACY_CODE

---
 ...move-ARCH_CET_LEGACY_BITMAP-BZ-25397.patch | 152 +++++++++++++-----
 1 file changed, 114 insertions(+), 38 deletions(-)

diff --git a/0001-x86-Remove-ARCH_CET_LEGACY_BITMAP-BZ-25397.patch b/0001-x86-Remove-ARCH_CET_LEGACY_BITMAP-BZ-25397.patch
index c9ef10d..6a6ea75 100644
--- a/0001-x86-Remove-ARCH_CET_LEGACY_BITMAP-BZ-25397.patch
+++ b/0001-x86-Remove-ARCH_CET_LEGACY_BITMAP-BZ-25397.patch
@@ -1,6 +1,6 @@
-From d68413ea9ee88ca12911890a3946f2a6cf998160 Mon Sep 17 00:00:00 2001
+From f0b6ba1c10640a1509c0c17ae25be1762f4ee2b9 Mon Sep 17 00:00:00 2001
 From: "H.J. Lu" <hjl.tools@gmail.com>
-Date: Tue, 25 Jun 2019 09:50:52 -0700
+Date: Wed, 18 Mar 2020 04:35:54 -0700
 Subject: [PATCH] x86: Remove ARCH_CET_LEGACY_BITMAP [BZ #25397]
 
 Since legacy bitmap doesn't cover jitted code generated by legacy JIT
@@ -8,35 +8,25 @@ engine, it isn't very useful.  This patch removes ARCH_CET_LEGACY_BITMAP
 and treats indirect branch tracking similar to shadow stack by removing
 legacy bitmap support.
 
-	* sysdeps/unix/sysv/linux/x86/dl-cet.h
-	(dl_cet_allocate_legacy_bitmap): Removed.
-	* sysdeps/unix/sysv/linux/x86/include/asm/prctl.h
-	(ARCH_CET_LEGACY_BITMAP): Removed.
-	* sysdeps/x86/Makefile (tests): Add tst-cet-legacy-7.
-	(CFLAGS-tst-cet-legacy-mod-5a.c): Changed to
-	-fcf-protection=branch.
-	(CFLAGS-tst-cet-legacy-mod-6a.c): Likewise.
-	(CFLAGS-tst-cet-legacy-7.c): New.
-	* sysdeps/x86/dl-cet.c (dl_cet_mark_legacy_region): Removed.
-	(dl_cet_check): Remove legacy bitmap support.  Don't allow
-	dlopening legacy shared library when IBT is enabled.  Set
-	feature_1 if IBT or SHSTK is enabled in executable.
-	* sysdeps/x86/dl-procruntime.c (_dl_x86_legacy_bitmap): Removed.
-	* sysdeps/x86/tst-cet-legacy-4.c: Include <string.h> and
-	<support/check.h>.
-	(do_test): Check indirect branch tracking error.  Use
-	FAIL_EXIT1.
-	* sysdeps/x86/tst-cet-legacy-7.c: New file.
+Tested on CET Linux/x86-64 and non-CET Linux/x86-64.
+
+Reviewed-by: Carlos O'Donell <carlos@redhat.com>
+
+(cherry picked from commit 1fabdb99084df004f7f4cdc7068d1be209a258be)
 ---
  sysdeps/unix/sysv/linux/x86/dl-cet.h          |  21 --
  .../unix/sysv/linux/x86/include/asm/prctl.h   |   5 -
- sysdeps/x86/Makefile                          |   7 +-
+ sysdeps/x86/Makefile                          |   9 +-
  sysdeps/x86/dl-cet.c                          | 217 +++++-------------
  sysdeps/x86/dl-procruntime.c                  |  11 -
  sysdeps/x86/tst-cet-legacy-4.c                |  19 +-
- sysdeps/x86/tst-cet-legacy-7.c                |  36 +++
- 7 files changed, 109 insertions(+), 207 deletions(-)
+ sysdeps/x86/tst-cet-legacy-5.c                |   3 +-
+ sysdeps/x86/tst-cet-legacy-6.c                |   3 +-
+ sysdeps/x86/tst-cet-legacy-7.c                |  38 +++
+ sysdeps/x86/tst-cet-legacy-8.c                |  48 ++++
+ 10 files changed, 165 insertions(+), 209 deletions(-)
  create mode 100644 sysdeps/x86/tst-cet-legacy-7.c
+ create mode 100644 sysdeps/x86/tst-cet-legacy-8.c
 
 diff --git a/sysdeps/unix/sysv/linux/x86/dl-cet.h b/sysdeps/unix/sysv/linux/x86/dl-cet.h
 index a8b794d773..9c43b01d69 100644
@@ -85,19 +75,20 @@ index f67f3299b9..45ad0b052f 100644
 -# define ARCH_CET_LEGACY_BITMAP	0x3005
  #endif /* ARCH_CET_STATUS */
 diff --git a/sysdeps/x86/Makefile b/sysdeps/x86/Makefile
-index 95182a508c..ec96b59a78 100644
+index 95182a508c..4ffa699e5f 100644
 --- a/sysdeps/x86/Makefile
 +++ b/sysdeps/x86/Makefile
-@@ -20,7 +20,7 @@ sysdep-dl-routines += dl-cet
+@@ -20,7 +20,8 @@ sysdep-dl-routines += dl-cet
  
  tests += tst-cet-legacy-1 tst-cet-legacy-1a tst-cet-legacy-2 \
  	 tst-cet-legacy-2a tst-cet-legacy-3 tst-cet-legacy-4 \
 -	 tst-cet-legacy-5a tst-cet-legacy-6a
-+	 tst-cet-legacy-5a tst-cet-legacy-6a tst-cet-legacy-7
++	 tst-cet-legacy-5a tst-cet-legacy-6a tst-cet-legacy-7 \
++	 tst-cet-legacy-8
  tst-cet-legacy-1a-ARGS = -- $(host-test-program-cmd)
  ifneq (no,$(have-tunables))
  tests += tst-cet-legacy-4a tst-cet-legacy-4b tst-cet-legacy-4c \
-@@ -43,14 +43,15 @@ CFLAGS-tst-cet-legacy-4b.c += -fcf-protection
+@@ -43,14 +44,16 @@ CFLAGS-tst-cet-legacy-4b.c += -fcf-protection
  CFLAGS-tst-cet-legacy-mod-4.c += -fcf-protection=none
  CFLAGS-tst-cet-legacy-5a.c += -fcf-protection
  CFLAGS-tst-cet-legacy-5b.c += -fcf-protection
@@ -112,11 +103,12 @@ index 95182a508c..ec96b59a78 100644
  CFLAGS-tst-cet-legacy-mod-6b.c += -fcf-protection
  CFLAGS-tst-cet-legacy-mod-6c.c += -fcf-protection
 +CFLAGS-tst-cet-legacy-7.c += -fcf-protection=none
++CFLAGS-tst-cet-legacy-8.c += -mshstk
  
  $(objpfx)tst-cet-legacy-1: $(objpfx)tst-cet-legacy-mod-1.so \
  		       $(objpfx)tst-cet-legacy-mod-2.so
 diff --git a/sysdeps/x86/dl-cet.c b/sysdeps/x86/dl-cet.c
-index 4f70497aa7..58677a04d4 100644
+index 4f70497aa7..80fdf6ec04 100644
 --- a/sysdeps/x86/dl-cet.c
 +++ b/sysdeps/x86/dl-cet.c
 @@ -33,63 +33,6 @@
@@ -324,10 +316,10 @@ index 4f70497aa7..58677a04d4 100644
 +		  /* When IBT is enabled, we cannot dlopen a shared
 +		     object without IBT.  */
 +		  if (found_ibt_legacy)
-+		    _dl_signal_error (EINVAL,
++		    _dl_signal_error (0,
 +				      m->l_initfini[ibt_legacy]->l_name,
 +				      "dlopen",
-+				      N_("indirect branch tracking isn't enabled"));
++				      N_("rebuild shared object with IBT support enabled"));
 +		}
 +
 +	      if (enable_shstk_type != CET_PERMISSIVE)
@@ -335,10 +327,10 @@ index 4f70497aa7..58677a04d4 100644
 +		  /* When SHSTK is enabled, we cannot dlopen a shared
 +		     object without SHSTK.  */
 +		  if (found_shstk_legacy)
-+		    _dl_signal_error (EINVAL,
++		    _dl_signal_error (0,
 +				      m->l_initfini[shstk_legacy]->l_name,
 +				      "dlopen",
-+				      N_("shadow stack isn't enabled"));
++				      N_("rebuild shared object with SHSTK support enabled"));
 +		}
 +
 +	      if (enable_ibt_type != CET_PERMISSIVE
@@ -425,7 +417,7 @@ index 54fed668a6..20923b195c 100644
 -# endif
  #endif
 diff --git a/sysdeps/x86/tst-cet-legacy-4.c b/sysdeps/x86/tst-cet-legacy-4.c
-index 5c918d64a4..8d92e5ff7e 100644
+index 5c918d64a4..f9864f013d 100644
 --- a/sysdeps/x86/tst-cet-legacy-4.c
 +++ b/sysdeps/x86/tst-cet-legacy-4.c
 @@ -20,6 +20,9 @@
@@ -445,7 +437,7 @@ index 5c918d64a4..8d92e5ff7e 100644
 -      printf ("cannot open '%s': %s\n", modname, dlerror ());
 -      exit (1);
 +      const char *err = dlerror ();
-+      if (!strstr (err, "indirect branch tracking isn't enabled"))
++      if (!strstr (err, "rebuild shared object with IBT support enabled"))
 +	FAIL_EXIT1 ("incorrect dlopen '%s' error: %s\n", modname, err);
 +      return 0;
      }
@@ -467,12 +459,40 @@ index 5c918d64a4..8d92e5ff7e 100644
  
    dlclose (h);
  
+diff --git a/sysdeps/x86/tst-cet-legacy-5.c b/sysdeps/x86/tst-cet-legacy-5.c
+index fbf640f664..e1ca09dd5b 100644
+--- a/sysdeps/x86/tst-cet-legacy-5.c
++++ b/sysdeps/x86/tst-cet-legacy-5.c
+@@ -35,7 +35,8 @@ do_test_1 (const char *modname, bool fail)
+       if (fail)
+ 	{
+ 	  const char *err = dlerror ();
+-	  if (strstr (err, "shadow stack isn't enabled") == NULL)
++	  if (strstr (err, "rebuild shared object with SHSTK support enabled")
++	      == NULL)
+ 	    {
+ 	      printf ("incorrect dlopen '%s' error: %s\n", modname,
+ 		      dlerror ());
+diff --git a/sysdeps/x86/tst-cet-legacy-6.c b/sysdeps/x86/tst-cet-legacy-6.c
+index 9151225264..184a35b83f 100644
+--- a/sysdeps/x86/tst-cet-legacy-6.c
++++ b/sysdeps/x86/tst-cet-legacy-6.c
+@@ -35,7 +35,8 @@ do_test_1 (const char *modname, bool fail)
+       if (fail)
+ 	{
+ 	  const char *err = dlerror ();
+-	  if (strstr (err, "shadow stack isn't enabled") == NULL)
++	  if (strstr (err, "rebuild shared object with SHSTK support enabled")
++	      == NULL)
+ 	    {
+ 	      printf ("incorrect dlopen '%s' error: %s\n", modname,
+ 		      dlerror ());
 diff --git a/sysdeps/x86/tst-cet-legacy-7.c b/sysdeps/x86/tst-cet-legacy-7.c
 new file mode 100644
-index 0000000000..cf4c2779ce
+index 0000000000..58bcb29a5f
 --- /dev/null
 +++ b/sysdeps/x86/tst-cet-legacy-7.c
-@@ -0,0 +1,36 @@
+@@ -0,0 +1,38 @@
 +/* Check compatibility of legacy executable with a JIT engine.
 +   Copyright (C) 2020 Free Software Foundation, Inc.
 +   This file is part of the GNU C Library.
@@ -495,6 +515,8 @@ index 0000000000..cf4c2779ce
 +#include <sys/mman.h>
 +#include <support/xunistd.h>
 +
++/* Check that mmapped legacy code works with -fcf-protection=none.  */
++
 +static int
 +do_test (void)
 +{
@@ -509,6 +531,60 @@ index 0000000000..cf4c2779ce
 +}
 +
 +#include <support/test-driver.c>
+diff --git a/sysdeps/x86/tst-cet-legacy-8.c b/sysdeps/x86/tst-cet-legacy-8.c
+new file mode 100644
+index 0000000000..11e811588c
+--- /dev/null
++++ b/sysdeps/x86/tst-cet-legacy-8.c
+@@ -0,0 +1,48 @@
++/* Check incompatibility with legacy JIT engine.
++   Copyright (C) 2020 Free Software Foundation, Inc.
++   This file is part of the GNU C Library.
++
++   The GNU C Library is free software; you can redistribute it and/or
++   modify it under the terms of the GNU Lesser General Public
++   License as published by the Free Software Foundation; either
++   version 2.1 of the License, or (at your option) any later version.
++
++   The GNU C Library is distributed in the hope that it will be useful,
++   but WITHOUT ANY WARRANTY; without even the implied warranty of
++   MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU
++   Lesser General Public License for more details.
++
++   You should have received a copy of the GNU Lesser General Public
++   License along with the GNU C Library; if not, see
++   <https://www.gnu.org/licenses/>.  */
++
++#include <stdio.h>
++#include <stdlib.h>
++#include <x86intrin.h>
++#include <sys/mman.h>
++#include <support/test-driver.h>
++#include <support/xsignal.h>
++#include <support/xunistd.h>
++
++/* Check that mmapped legacy code trigges segfault with -fcf-protection.  */
++
++static int
++do_test (void)
++{
++  /* NB: This test should trigger SIGSEGV on CET platforms.  If SHSTK
++     is disabled, assuming IBT is also disabled.  */
++  if (_get_ssp () == 0)
++    return EXIT_UNSUPPORTED;
++
++  void (*funcp) (void);
++  funcp = xmmap (NULL, 0x1000, PROT_EXEC | PROT_READ | PROT_WRITE,
++		 MAP_ANONYMOUS | MAP_PRIVATE, -1);
++  printf ("mmap = %p\n", funcp);
++  /* Write RET instruction.  */
++  *(char *) funcp = 0xc3;
++  funcp ();
++  return EXIT_FAILURE;
++}
++
++#define EXPECTED_SIGNAL (_get_ssp () == 0 ? 0 : SIGSEGV)
++#include <support/test-driver.c>
 -- 
-2.24.1
+2.25.1
 
-- 
2.25.1

