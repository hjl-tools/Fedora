From 1bb3d4058f732905e7d9bd8db0f250a2ea4fac10 Mon Sep 17 00:00:00 2001
From: "H.J. Lu" <hjl.tools@gmail.com>
Date: Fri, 18 Sep 2020 06:04:51 -0700
Subject: [PATCH 1/6] Revert Update ARCH_X86_CET_MMAP_SHSTK with CET v5.9-rc1

ARCH_X86_CET_MMAP_SHSTK is removed.
---
 ...X86_CET_MMAP_SHSTK-with-CET-v5.9-rc1.patch | 134 ------------------
 ...-5-arguments-for-long-arch_prctl-int.patch | 128 -----------------
 0002-Update-ARCH_X86_CET_MMAP_SHSTK.patch     |  65 ---------
 kernel.spec                                   |   4 -
 4 files changed, 331 deletions(-)
 delete mode 100644 0001-Update-ARCH_X86_CET_MMAP_SHSTK-with-CET-v5.9-rc1.patch
 delete mode 100644 0001-x86-Support-5-arguments-for-long-arch_prctl-int.patch
 delete mode 100644 0002-Update-ARCH_X86_CET_MMAP_SHSTK.patch

diff --git a/0001-Update-ARCH_X86_CET_MMAP_SHSTK-with-CET-v5.9-rc1.patch b/0001-Update-ARCH_X86_CET_MMAP_SHSTK-with-CET-v5.9-rc1.patch
deleted file mode 100644
index c9f334c31..000000000
--- a/0001-Update-ARCH_X86_CET_MMAP_SHSTK-with-CET-v5.9-rc1.patch
+++ /dev/null
@@ -1,134 +0,0 @@
-From 6441de444294fd982eef7d33bd49922b97572c34 Mon Sep 17 00:00:00 2001
-From: "H.J. Lu" <hjl.tools@gmail.com>
-Date: Mon, 17 Aug 2020 17:55:33 -0700
-Subject: [PATCH] Update ARCH_X86_CET_MMAP_SHSTK with CET v5.9-rc1
-
-Change ARCH_X86_CET_MMAP_SHSTK to
-
-    arch_prctl(ARCH_X86_CET_MMAP_SHSTK, u64 *args)
-        Allocate a new shadow stack.
-
-        The parameter 'args' is a pointer to a user buffer.
-
-        *args = desired size
-        *(args + 1) = MAP_32BIT or MAP_POPULATE
-
-        On returning, *args is the allocated shadow stack address.
----
- arch/x86/include/asm/cet.h  |  2 +-
- arch/x86/kernel/cet.c       | 16 ++++++++--------
- arch/x86/kernel/cet_prctl.c | 12 ++++--------
- 3 files changed, 13 insertions(+), 17 deletions(-)
-
-diff --git a/arch/x86/include/asm/cet.h b/arch/x86/include/asm/cet.h
-index 96372eda0c63..916ac2a0404c 100644
---- a/arch/x86/include/asm/cet.h
-+++ b/arch/x86/include/asm/cet.h
-@@ -22,7 +22,7 @@ struct cet_status {
- int prctl_cet(int option, u64 arg2);
- int cet_setup_shstk(void);
- int cet_setup_thread_shstk(struct task_struct *p);
--unsigned long cet_alloc_shstk(unsigned long addr, unsigned long size, int flags);
-+unsigned long cet_alloc_shstk(unsigned long size, int flags);
- void cet_disable_free_shstk(struct task_struct *p);
- int cet_verify_rstor_token(bool ia32, unsigned long ssp, unsigned long *new_ssp);
- void cet_restore_signal(struct sc_ext *sc);
-diff --git a/arch/x86/kernel/cet.c b/arch/x86/kernel/cet.c
-index 73e156c6f65f..92b81560eafc 100644
---- a/arch/x86/kernel/cet.c
-+++ b/arch/x86/kernel/cet.c
-@@ -57,16 +57,16 @@ static unsigned long cet_get_shstk_addr(void)
- 	return ssp;
- }
- 
--static unsigned long alloc_shstk(unsigned long addr, unsigned long size, int flags)
-+static unsigned long alloc_shstk(unsigned long size, int flags)
- {
- 	struct mm_struct *mm = current->mm;
--	unsigned long populate;
-+	unsigned long addr, populate;
- 
- 	/* VM_SHSTK requires MAP_ANONYMOUS, MAP_PRIVATE */
- 	flags |= MAP_ANONYMOUS | MAP_PRIVATE;
- 
- 	mmap_write_lock(mm);
--	addr = do_mmap(NULL, addr, size, PROT_READ, flags, VM_SHSTK, 0,
-+	addr = do_mmap(NULL, 0, size, PROT_READ, flags, VM_SHSTK, 0,
- 		       &populate, NULL);
- 	mmap_write_unlock(mm);
- 
-@@ -150,12 +150,12 @@ static int create_rstor_token(bool ia32, unsigned long ssp,
- 	return 0;
- }
- 
--unsigned long cet_alloc_shstk(unsigned long addr, unsigned long len, int flags)
-+unsigned long cet_alloc_shstk(unsigned long len, int flags)
- {
- 	unsigned long token;
--	unsigned long ssp;
-+	unsigned long addr, ssp;
- 
--	addr = alloc_shstk(addr, round_up(len, PAGE_SIZE), flags);
-+	addr = alloc_shstk(round_up(len, PAGE_SIZE), flags);
- 
- 	if (IS_ERR_VALUE(addr))
- 		return addr;
-@@ -185,7 +185,7 @@ int cet_setup_shstk(void)
- 		return -EOPNOTSUPP;
- 
- 	size = round_up(min(rlimit(RLIMIT_STACK), 1UL << 32), PAGE_SIZE);
--	addr = alloc_shstk(0, size, 0);
-+	addr = alloc_shstk(size, 0);
- 
- 	if (IS_ERR_VALUE(addr))
- 		return PTR_ERR((void *)addr);
-@@ -226,7 +226,7 @@ int cet_setup_thread_shstk(struct task_struct *tsk)
- 	if (in_compat_syscall())
- 		size /= 4;
- 	size = round_up(size, PAGE_SIZE);
--	addr = alloc_shstk(0, size, 0);
-+	addr = alloc_shstk(size, 0);
- 
- 	if (IS_ERR_VALUE(addr)) {
- 		cet->shstk_base = 0;
-diff --git a/arch/x86/kernel/cet_prctl.c b/arch/x86/kernel/cet_prctl.c
-index d4688dda3d0c..f12b9d448181 100644
---- a/arch/x86/kernel/cet_prctl.c
-+++ b/arch/x86/kernel/cet_prctl.c
-@@ -35,7 +35,7 @@ static int handle_alloc_shstk(u64 arg2)
- 	if (get_user(size, (unsigned long __user *)arg2))
- 		return -EFAULT;
- 
--	addr = cet_alloc_shstk(0, size, 0);
-+	addr = cet_alloc_shstk(size, 0);
- 	if (IS_ERR_VALUE(addr))
- 		return PTR_ERR((void *)addr);
- 
-@@ -56,21 +56,17 @@ static int handle_mmap_shstk(u64 arg2)
- 	if (copy_from_user(buf, (unsigned long __user *)arg2, sizeof(buf)))
- 		return -EFAULT;
- 
--	addr = buf[0];
--	size = buf[1];
-+	size = buf[0];
- 
- 	/*
- 	 * Check invalid flags
- 	 */
- 	allowed_flags = MAP_ANONYMOUS | MAP_PRIVATE | MAP_32BIT | MAP_POPULATE;
- 
--	if (buf[2] & ~allowed_flags)
-+	if (buf[1] & ~allowed_flags)
- 		return -EINVAL;
- 
--	if (!addr && (buf[2] & MAP_FIXED))
--		return -EINVAL;
--
--	addr = cet_alloc_shstk(addr, size, buf[2]);
-+	addr = cet_alloc_shstk(size, buf[1]);
- 	if (IS_ERR_VALUE(addr))
- 		return PTR_ERR((void *)addr);
- 
--- 
-2.26.2
-
diff --git a/0001-x86-Support-5-arguments-for-long-arch_prctl-int.patch b/0001-x86-Support-5-arguments-for-long-arch_prctl-int.patch
deleted file mode 100644
index ca7627268..000000000
--- a/0001-x86-Support-5-arguments-for-long-arch_prctl-int.patch
+++ /dev/null
@@ -1,128 +0,0 @@
-From 9dfcadd793c59a84ae955e7b7cec285eeac535c2 Mon Sep 17 00:00:00 2001
-From: "H.J. Lu" <hjl.tools@gmail.com>
-Date: Thu, 27 Aug 2020 04:21:47 -0700
-Subject: [PATCH 1/2] x86: Support 5 arguments for long arch_prctl (int, ...)
-
-Signed-off-by: H.J. Lu <hjl.tools@gmail.com>
----
- arch/x86/include/asm/cet.h   |  2 +-
- arch/x86/include/asm/proto.h |  3 ++-
- arch/x86/kernel/cet_prctl.c  |  2 +-
- arch/x86/kernel/process.c    |  5 +++--
- arch/x86/kernel/process_32.c |  6 ++++--
- arch/x86/kernel/process_64.c | 12 ++++++++----
- 6 files changed, 19 insertions(+), 11 deletions(-)
-
-diff --git a/arch/x86/include/asm/cet.h b/arch/x86/include/asm/cet.h
-index 916ac2a0404c..8f13000f6d4a 100644
---- a/arch/x86/include/asm/cet.h
-+++ b/arch/x86/include/asm/cet.h
-@@ -19,7 +19,7 @@ struct cet_status {
- };
- 
- #ifdef CONFIG_X86_INTEL_CET
--int prctl_cet(int option, u64 arg2);
-+long prctl_cet(int option, unsigned long arg2, unsigned long arg3);
- int cet_setup_shstk(void);
- int cet_setup_thread_shstk(struct task_struct *p);
- unsigned long cet_alloc_shstk(unsigned long size, int flags);
-diff --git a/arch/x86/include/asm/proto.h b/arch/x86/include/asm/proto.h
-index 6e81788a30c1..7218b2bfce6a 100644
---- a/arch/x86/include/asm/proto.h
-+++ b/arch/x86/include/asm/proto.h
-@@ -36,6 +36,7 @@ void x86_report_nx(void);
- extern int reboot_force;
- 
- long do_arch_prctl_common(struct task_struct *task, int option,
--			  unsigned long cpuid_enabled);
-+			  unsigned long cpuid_enabled, unsigned long arg3,
-+			  unsigned long arg4, unsigned long arg5);
- 
- #endif /* _ASM_X86_PROTO_H */
-diff --git a/arch/x86/kernel/cet_prctl.c b/arch/x86/kernel/cet_prctl.c
-index f12b9d448181..67d96b0cc5ee 100644
---- a/arch/x86/kernel/cet_prctl.c
-+++ b/arch/x86/kernel/cet_prctl.c
-@@ -78,7 +78,7 @@ static int handle_mmap_shstk(u64 arg2)
- 	return 0;
- }
- 
--int prctl_cet(int option, u64 arg2)
-+long prctl_cet(int option, unsigned long arg2, unsigned long arg3)
- {
- 	struct cet_status *cet;
- 
-diff --git a/arch/x86/kernel/process.c b/arch/x86/kernel/process.c
-index 426557c89b21..66739435dc82 100644
---- a/arch/x86/kernel/process.c
-+++ b/arch/x86/kernel/process.c
-@@ -978,7 +978,8 @@ unsigned long get_wchan(struct task_struct *p)
- }
- 
- long do_arch_prctl_common(struct task_struct *task, int option,
--			  unsigned long arg2)
-+			  unsigned long arg2, unsigned long arg3,
-+			  unsigned long arg4, unsigned long arg5)
- {
- 	switch (option) {
- 	case ARCH_GET_CPUID:
-@@ -987,5 +988,5 @@ long do_arch_prctl_common(struct task_struct *task, int option,
- 		return set_cpuid_mode(task, arg2);
- 	}
- 
--	return prctl_cet(option, arg2);
-+	return prctl_cet(option, arg2, arg3);
- }
-diff --git a/arch/x86/kernel/process_32.c b/arch/x86/kernel/process_32.c
-index acfd6d2a0cbf..88da0220d67a 100644
---- a/arch/x86/kernel/process_32.c
-+++ b/arch/x86/kernel/process_32.c
-@@ -220,7 +220,9 @@ __switch_to(struct task_struct *prev_p, struct task_struct *next_p)
- 	return prev_p;
- }
- 
--SYSCALL_DEFINE2(arch_prctl, int, option, unsigned long, arg2)
-+SYSCALL_DEFINE5(arch_prctl, int, option, unsigned long, arg2,
-+		unsigned long, arg3, unsigned long, arg4,
-+		unsigned long, arg5)
- {
--	return do_arch_prctl_common(current, option, arg2);
-+	return do_arch_prctl_common(current, option, arg2, arg3, arg4, arg5);
- }
-diff --git a/arch/x86/kernel/process_64.c b/arch/x86/kernel/process_64.c
-index fc5db9b9677e..27c2bfd0e288 100644
---- a/arch/x86/kernel/process_64.c
-+++ b/arch/x86/kernel/process_64.c
-@@ -707,21 +707,25 @@ long do_arch_prctl_64(struct task_struct *task, int option, unsigned long arg2)
- 	return ret;
- }
- 
--SYSCALL_DEFINE2(arch_prctl, int, option, unsigned long, arg2)
-+SYSCALL_DEFINE5(arch_prctl, int, option, unsigned long, arg2,
-+		unsigned long, arg3, unsigned long, arg4,
-+		unsigned long, arg5)
- {
- 	long ret;
- 
- 	ret = do_arch_prctl_64(current, option, arg2);
- 	if (ret == -EINVAL)
--		ret = do_arch_prctl_common(current, option, arg2);
-+		ret = do_arch_prctl_common(current, option, arg2, arg3, arg4, arg5);
- 
- 	return ret;
- }
- 
- #ifdef CONFIG_IA32_EMULATION
--COMPAT_SYSCALL_DEFINE2(arch_prctl, int, option, unsigned long, arg2)
-+COMPAT_SYSCALL_DEFINE5(arch_prctl, int, option, unsigned long, arg2,
-+		       unsigned long, arg3, unsigned long, arg4,
-+		       unsigned long, arg5)
- {
--	return do_arch_prctl_common(current, option, arg2);
-+	return do_arch_prctl_common(current, option, arg2, arg3, arg4, arg5);
- }
- #endif
- 
--- 
-2.26.2
-
diff --git a/0002-Update-ARCH_X86_CET_MMAP_SHSTK.patch b/0002-Update-ARCH_X86_CET_MMAP_SHSTK.patch
deleted file mode 100644
index b44bcdbf4..000000000
--- a/0002-Update-ARCH_X86_CET_MMAP_SHSTK.patch
+++ /dev/null
@@ -1,65 +0,0 @@
-From 956e652dcd4684115a6fffb23ddd34e7a2717a82 Mon Sep 17 00:00:00 2001
-From: "H.J. Lu" <hjl.tools@gmail.com>
-Date: Thu, 27 Aug 2020 04:50:57 -0700
-Subject: [PATCH 2/2] Update ARCH_X86_CET_MMAP_SHSTK
-
-long arch_prctl(ARCH_X86_CET_MMAP_SHSTK, unsigned long size, int flags);
----
- arch/x86/kernel/cet_prctl.c | 24 ++++--------------------
- 1 file changed, 4 insertions(+), 20 deletions(-)
-
-diff --git a/arch/x86/kernel/cet_prctl.c b/arch/x86/kernel/cet_prctl.c
-index 67d96b0cc5ee..a1bf0b096516 100644
---- a/arch/x86/kernel/cet_prctl.c
-+++ b/arch/x86/kernel/cet_prctl.c
-@@ -47,35 +47,19 @@ static int handle_alloc_shstk(u64 arg2)
- 	return 0;
- }
- 
--static int handle_mmap_shstk(u64 arg2)
-+static long handle_mmap_shstk(unsigned long size, int flags)
- {
--	u64 buf[3];
--	unsigned long addr, size;
- 	int allowed_flags;
- 
--	if (copy_from_user(buf, (unsigned long __user *)arg2, sizeof(buf)))
--		return -EFAULT;
--
--	size = buf[0];
--
- 	/*
- 	 * Check invalid flags
- 	 */
- 	allowed_flags = MAP_ANONYMOUS | MAP_PRIVATE | MAP_32BIT | MAP_POPULATE;
- 
--	if (buf[1] & ~allowed_flags)
-+	if (flags & ~allowed_flags)
- 		return -EINVAL;
- 
--	addr = cet_alloc_shstk(size, buf[1]);
--	if (IS_ERR_VALUE(addr))
--		return PTR_ERR((void *)addr);
--
--	if (put_user(addr, (u64 __user *)arg2)) {
--		vm_munmap(addr, size);
--		return -EFAULT;
--	}
--
--	return 0;
-+	return cet_alloc_shstk(size, flags);
- }
- 
- long prctl_cet(int option, unsigned long arg2, unsigned long arg3)
-@@ -118,7 +102,7 @@ long prctl_cet(int option, unsigned long arg2, unsigned long arg3)
- 		return handle_alloc_shstk(arg2);
- 
- 	case ARCH_X86_CET_MMAP_SHSTK:
--		return handle_mmap_shstk(arg2);
-+		return handle_mmap_shstk(arg2, arg3);
- 
- 	default:
- 		return -ENOSYS;
--- 
-2.26.2
-
diff --git a/kernel.spec b/kernel.spec
index a196df6a6..a5d26f856 100644
--- a/kernel.spec
+++ b/kernel.spec
@@ -39,10 +39,6 @@ Patch200038: 0038-selftest-x86-Fix-sigreturn_64-test.patch
 Patch200039: 0039-selftest-x86-Fix-sysret_rip-with-ENDBR.patch
 Patch200040: 0040-selftest-x86-Add-CET-quick-test.patch
 
-Patch300001: 0001-Update-ARCH_X86_CET_MMAP_SHSTK-with-CET-v5.9-rc1.patch
-Patch300002: 0001-x86-Support-5-arguments-for-long-arch_prctl-int.patch
-Patch300003: 0002-Update-ARCH_X86_CET_MMAP_SHSTK.patch
-
 Patch400001: 0001-x86-cet-shstk-Issue-WRMSR-MSR_IA32_PL3_SSP-after-XRS.patch
 Patch400002: 0001-cetregs_set-Validate-IA32_U_CET-bits.patch
 
-- 
2.26.2

