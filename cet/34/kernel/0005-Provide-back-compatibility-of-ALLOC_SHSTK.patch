From 059e32d5b49210ad9a0a4f43f1cb7c28abbab21e Mon Sep 17 00:00:00 2001
From: "H.J. Lu" <hjl.tools@gmail.com>
Date: Fri, 23 Oct 2020 15:28:37 -0700
Subject: [PATCH 5/7] Provide back compatibility of ALLOC_SHSTK

---
 ...de-back-compatibility-of-ALLOC_SHSTK.patch | 117 ++++++++++++++++++
 kernel.spec                                   |   5 +
 2 files changed, 122 insertions(+)
 create mode 100644 0001-Provide-back-compatibility-of-ALLOC_SHSTK.patch

diff --git a/0001-Provide-back-compatibility-of-ALLOC_SHSTK.patch b/0001-Provide-back-compatibility-of-ALLOC_SHSTK.patch
new file mode 100644
index 000000000..7dc388514
--- /dev/null
+++ b/0001-Provide-back-compatibility-of-ALLOC_SHSTK.patch
@@ -0,0 +1,117 @@
+From e83118663e6a29b008a59cc9ee090f28c0d4691c Mon Sep 17 00:00:00 2001
+From: Yu-cheng Yu <yu-cheng.yu@intel.com>
+Date: Tue, 8 Sep 2020 15:39:28 -0700
+Subject: [PATCH] Provide back compatibility of ALLOC_SHSTK
+
+Signed-off-by: Yu-cheng Yu <yu-cheng.yu@intel.com>
+---
+ arch/x86/include/asm/cet.h        |  1 +
+ arch/x86/include/uapi/asm/prctl.h |  1 +
+ arch/x86/kernel/cet_prctl.c       | 26 ++++++++++++++++++++++++++
+ arch/x86/kernel/shstk.c           | 26 ++++++++++++++++++++++++++
+ 4 files changed, 54 insertions(+)
+
+diff --git a/arch/x86/include/asm/cet.h b/arch/x86/include/asm/cet.h
+index 17afcc9ea4d1..d9dd50e41eb3 100644
+--- a/arch/x86/include/asm/cet.h
++++ b/arch/x86/include/asm/cet.h
+@@ -28,6 +28,7 @@ int shstk_setup_rstor_token(bool ia32, unsigned long rstor,
+ 			    unsigned long *token_addr, unsigned long *new_ssp);
+ int shstk_check_rstor_token(bool ia32, unsigned long token_addr,
+ 			    unsigned long *new_ssp);
++unsigned long cet_alloc_shstk(unsigned long size);
+ #else
+ static inline int shstk_setup(void) { return 0; }
+ static inline int shstk_setup_thread(struct task_struct *p,
+diff --git a/arch/x86/include/uapi/asm/prctl.h b/arch/x86/include/uapi/asm/prctl.h
+index 9245bf629120..d962f0ec9ccf 100644
+--- a/arch/x86/include/uapi/asm/prctl.h
++++ b/arch/x86/include/uapi/asm/prctl.h
+@@ -17,5 +17,6 @@
+ #define ARCH_X86_CET_STATUS		0x3001
+ #define ARCH_X86_CET_DISABLE		0x3002
+ #define ARCH_X86_CET_LOCK		0x3003
++#define ARCH_X86_CET_ALLOC_SHSTK	0x3004
+ 
+ #endif /* _ASM_X86_PRCTL_H */
+diff --git a/arch/x86/kernel/cet_prctl.c b/arch/x86/kernel/cet_prctl.c
+index ab05597545c5..f4ca43ac1fbb 100644
+--- a/arch/x86/kernel/cet_prctl.c
++++ b/arch/x86/kernel/cet_prctl.c
+@@ -28,6 +28,27 @@ static int cet_copy_status_to_user(struct cet_status *cet, u64 __user *ubuf)
+ 	return copy_to_user(ubuf, buf, sizeof(buf));
+ }
+ 
++#ifdef CONFIG_X86_SHADOW_STACK
++static int handle_alloc_shstk(u64 arg2)
++{
++	unsigned long addr, size;
++
++	if (get_user(size, (unsigned long __user *)arg2))
++		return -EFAULT;
++
++	addr = cet_alloc_shstk(size);
++	if (IS_ERR_VALUE(addr))
++		return PTR_ERR((void *)addr);
++
++	if (put_user((u64)addr, (u64 __user *)arg2)) {
++		vm_munmap(addr, size);
++		return -EFAULT;
++	}
++
++	return 0;
++}
++#endif
++
+ int prctl_cet(int option, u64 arg2)
+ {
+ 	struct cet_status *cet;
+@@ -59,6 +80,11 @@ int prctl_cet(int option, u64 arg2)
+ 		cet->locked = 1;
+ 		return 0;
+ 
++#ifdef CONFIG_X86_SHADOW_STACK
++	case ARCH_X86_CET_ALLOC_SHSTK:
++		return handle_alloc_shstk(arg2);
++#endif
++
+ 	default:
+ 		return -ENOSYS;
+ 	}
+diff --git a/arch/x86/kernel/shstk.c b/arch/x86/kernel/shstk.c
+index 48a0c87414ef..638959966aca 100644
+--- a/arch/x86/kernel/shstk.c
++++ b/arch/x86/kernel/shstk.c
+@@ -302,3 +302,29 @@ int shstk_check_rstor_token(bool ia32, unsigned long token_addr, unsigned long *
+ 	*new_ssp = token;
+ 	return 0;
+ }
++
++unsigned long cet_alloc_shstk(unsigned long len)
++{
++	unsigned long token;
++	unsigned long addr, ssp;
++
++	addr = alloc_shstk(round_up(len, PAGE_SIZE));
++
++	if (IS_ERR_VALUE(addr))
++		return addr;
++
++	/* Restore token is 8 bytes and aligned to 8 bytes */
++	ssp = addr + len;
++	token = ssp;
++
++	if (!in_ia32_syscall())
++		token |= TOKEN_MODE_64;
++	ssp -= 8;
++
++	if (write_user_shstk_64((u64 __user *)ssp, (u64)token)) {
++		vm_munmap(addr, len);
++		return -EINVAL;
++	}
++
++	return addr;
++}
+-- 
+2.30.2
+
diff --git a/kernel.spec b/kernel.spec
index 1acfc8e03..cedfd9d4c 100755
--- a/kernel.spec
+++ b/kernel.spec
@@ -41,6 +41,8 @@ Patch200040: 0040-x86-cet-Add-PTRACE-interface-for-CET.patch
 Patch200041: 0041-powerpc-Keep-.rela-sections-when-CONFIG_RELOCATABLE-.patch
 Patch200042: 0042-Discard-.note.gnu.property-sections-in-generic-NOTES.patch
 
+Patch300001: 0001-Provide-back-compatibility-of-ALLOC_SHSTK.patch
+
 # Per the below section about __spec_install_pre, any rpm
 # environment changes that affect %%install need to go
 # here before the %%install macro is pre-built.
@@ -1374,6 +1376,9 @@ ApplyOptionalPatch 0039-x86-vdso-Add-ENDBR-to-__vdso_sgx_enter_enclave.patch
 ApplyOptionalPatch 0040-x86-cet-Add-PTRACE-interface-for-CET.patch
 ApplyOptionalPatch 0041-powerpc-Keep-.rela-sections-when-CONFIG_RELOCATABLE-.patch
 ApplyOptionalPatch 0042-Discard-.note.gnu.property-sections-in-generic-NOTES.patch
+
+ApplyOptionalPatch 0001-Provide-back-compatibility-of-ALLOC_SHSTK.patch
+
 # All Global changes to build and install go here.
 
 # END OF PATCH APPLICATIONS
-- 
2.31.1

