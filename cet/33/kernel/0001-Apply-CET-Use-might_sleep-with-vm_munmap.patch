From 941b9dd811d929dd84073e749034ae433f7c757d Mon Sep 17 00:00:00 2001
From: "H.J. Lu" <hjl.tools@gmail.com>
Date: Mon, 20 Apr 2020 06:44:25 -0700
Subject: [PATCH] Apply CET: Use might_sleep with vm_munmap

---
 0001-CET-Use-might_sleep-with-vm_munmap.patch | 40 +++++++++++++++++++
 kernel.spec                                   |  4 ++
 2 files changed, 44 insertions(+)
 create mode 100644 0001-CET-Use-might_sleep-with-vm_munmap.patch

diff --git a/0001-CET-Use-might_sleep-with-vm_munmap.patch b/0001-CET-Use-might_sleep-with-vm_munmap.patch
new file mode 100644
index 000000000..f0d84ebce
--- /dev/null
+++ b/0001-CET-Use-might_sleep-with-vm_munmap.patch
@@ -0,0 +1,40 @@
+From 7db675a96627a1dd42cad58490b623538ff63e42 Mon Sep 17 00:00:00 2001
+From: "H.J. Lu" <hjl.tools@gmail.com>
+Date: Sun, 19 Apr 2020 16:52:39 -0700
+Subject: [PATCH] CET: Use might_sleep with vm_munmap
+
+In cet_disable_free_shstk, if vm_munmap fails with -EAGAIN, call
+might_sleep and repeat.
+---
+ arch/x86/kernel/cet.c | 8 +++++++-
+ 1 file changed, 7 insertions(+), 1 deletion(-)
+
+diff --git a/arch/x86/kernel/cet.c b/arch/x86/kernel/cet.c
+index 264e25bf9a20..4e07c167c208 100644
+--- a/arch/x86/kernel/cet.c
++++ b/arch/x86/kernel/cet.c
+@@ -244,6 +244,7 @@ int cet_setup_thread_shstk(struct task_struct *tsk)
+ void cet_disable_free_shstk(struct task_struct *tsk)
+ {
+ 	struct cet_status *cet = &tsk->thread.cet;
++	int err;
+ 
+ 	if (!static_cpu_has(X86_FEATURE_SHSTK) ||
+ 	    !cet->shstk_size || !cet->shstk_base)
+@@ -262,7 +263,12 @@ void cet_disable_free_shstk(struct task_struct *tsk)
+ 		end_update_msrs();
+ 	}
+ 
+-	vm_munmap(cet->shstk_base, cet->shstk_size);
++	do {
++		err = vm_munmap(cet->shstk_base, cet->shstk_size);
++		if (err != -EAGAIN)
++			break;
++		might_sleep();
++	} while (1);
+ 	cet->shstk_base = 0;
+ 	cet->shstk_size = 0;
+ }
+-- 
+2.25.2
+
diff --git a/kernel.spec b/kernel.spec
index 538cbc547..accf3599f 100644
--- a/kernel.spec
+++ b/kernel.spec
@@ -48,6 +48,8 @@ Patch200045: 0045-x86-vdso-32-Add-ENDBR32-to-__kernel_vsyscall-entry-p.patch
 Patch200046: 0046-x86-vdso-Insert-endbr32-endbr64-to-vDSO.patch
 Patch200047: 0047-x86-Disallow-vsyscall-emulation-when-CET-is-enabled.patch
 
+Patch300000: 0001-CET-Use-might_sleep-with-vm_munmap.patch
+
 # We have to override the new %%install behavior because, well... the kernel is special.
 %global __spec_install_pre %{___build_pre}
 
@@ -1302,6 +1304,8 @@ ApplyOptionalPatch 0044-Discard-.note.gnu.property-sections-in-generic-NOTES.pat
 ApplyOptionalPatch 0045-x86-vdso-32-Add-ENDBR32-to-__kernel_vsyscall-entry-p.patch
 ApplyOptionalPatch 0046-x86-vdso-Insert-endbr32-endbr64-to-vDSO.patch
 ApplyOptionalPatch 0047-x86-Disallow-vsyscall-emulation-when-CET-is-enabled.patch
+
+ApplyOptionalPatch 0001-CET-Use-might_sleep-with-vm_munmap.patch
 # END OF PATCH APPLICATIONS
 
 # Any further pre-build tree manipulations happen here.
-- 
2.26.0

